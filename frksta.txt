Baranja zadaca 2:

-- BARANJE 1
/*
SELECT IMEV, IMEP
FROM VRABOTENI V, ULOGI U, PRETSTAVI P, BILETI B
WHERE U.V=V.V AND U.P = P.P AND P.P = B.P AND B.SCENA='golema' AND B.STATUS='redovna'

*/


-- BARANJE 2
/*
CREATE TABLE "TMP" AS
(
SELECT V, COUNT(*) AS cnt
FROM ULOGI U
GROUP BY V
)


SELECT V.IMEV
FROM TMP, VRABOTENI V
WHERE CNT in (SELECT MAX(cnt)
              FROM TMP)
              AND
              TMP.V = V.V;

DROP TABLE TMP;
*/




-- NE PRIPAGJA VO BARANJA (LABAVO)
/*
SELECT IMEV
FROM ZARABOTUVA Z, VRABOTENI V
WHERE (HONORAR = (SELECT MAX(HONORAR)
                 FROM ZARABOTUVA)) AND Z.V = V.V;
*/




-- BARANJE 3
/*
CREATE TABLE "TMP" AS
(
SELECT IMEV, AVG(HONORAR) AS AVG_HON
FROM ZARABOTUVA Z, VRABOTENI V
WHERE Z.V = V.V
GROUP BY IMEV
);

SELECT IMEV
FROM TMP T
WHERE (AVG_HON = (SELECT MAX(AVG_HON)
                  FROM TMP T2));

DROP TABLE TMP;
*/

-- Baranje 4
/*
SELECT IMET, COUNT(DISTINCT B.P)
FROM BILETI B, TEATRI T
WHERE B.T = ðŸ˜­
GROUP BY IMET
ORDER BY IMET ASC
*/


-- Baranje 5
/*

CREATE TABLE "TMP1" AS
(
SELECT IMEP, SUM(PRODADENI*CENA) AS PROF_BIL
FROM PRETSTAVI P, BILETI B
WHERE P.P = B.P
GROUP BY IMEP
);

CREATE TABLE "TMP2" AS
(
SELECT IMEP, COUNT(*) as BR_IZVEDBI
FROM PRETSTAVI P, BILETI B
WHERE P.P = B.P
GROUP BY IMEP
);

CREATE TABLE "TMP3" AS
(
SELECT P.IMEP, SUM(HONORAR*BR_IZVEDBI) AS ISPL_HON
FROM PRETSTAVI P, ZARABOTUVA Z, TMP2 T2
WHERE P.P = Z.P AND P.IMEP = T2.IMEP
GROUP BY P.IMEP
);

SELECT T1.IMEP
FROM TMP1 T1, TMP3 T3
WHERE T1.IMEP = T3.IMEP AND T1.PROF_BIL > ISPL_HON


DROP TABLE TMP1;
DROP TABLE TMP2;
DROP TABLE TMP3;
*/

BARANJA ZADACA 1:

/* DDL
ALTER TABLE "ORDERDETAILS" ADD CONSTRAINT "ORDER_DETAILS_FK"
    FOREIGN KEY ("ORDERID") REFERENCES "ORDERS" ("ORDERID")
    ON DELETE CASCADE

ALTER TABLE "ORDERS" ADD CONSTRAINT "ORDERS_CONSULTANT_ID_FK"
    FOREIGN KEY ("CONSULTANTID") REFERENCES "CONSULTANTS" ("CONSULTANTID")
    ON DELETE CASCADE

-- Zatoa sto ON DELETE treba da bide SET NULL
ALTER TABLE "ORDERS" DROP CONSTRAINT "ORDERS_CONSULTANT_ID_FK"

ALTER TABLE "ORDERS" ADD CONSTRAINT "ORDERS_CONSULTANT_ID_FK"
    FOREIGN KEY ("CONSULTANTID") REFERENCES "CONSULTANTS" ("CONSULTANTID")
    ON DELETE SET NULL


ALTER TABLE "ORDERDETAILS" ADD CONSTRAINT "ORDER_DETAILS_PRODUCT_ID_FK"
    FOREIGN KEY ("PRODUCTID") REFERENCES "PRODUCTS" ("PRODUCTID")
    ON DELETE CASCADE


ALTER TABLE "PRODUCTS" ADD CONSTRAINT "PRODUCT_CATEGORY_ID_FK"
    FOREIGN KEY ("CATEGORYID") REFERENCES "CATEGORIES" ("CATEGORYID")
    ON DELETE SET NULL

ALTER TABLE "PRODUCTS" ADD CONSTRAINT "PRODUCT_SUPPLIERS_ID_FK"
    FOREIGN KEY ("SUPPLIERID") REFERENCES "SUPPLIERS" ("SUPPLIERID")
    ON DELETE SET NULL
*/

-- DML
/*
-- BARANJE 1
SELECT *
FROM CONSULTANTS
WHERE CONSULTANTNAME LIKE 'P%'

-- BARANJE 2
SELECT *
FROM CONSULTANTS
WHERE CONSULTANTNAME LIKE '%ska M%'

-- BARANJE 3
SELECT *
FROM CONSULTANTS
WHERE CONSULTANTNAME LIKE '% ___'

-- BARANJE 4
SELECT *
FROM PRODUCTS
WHERE PRODUCTNAME LIKE '% %'


-- BARANJE 5
SELECT *
FROM PRODUCTS
WHERE PRODUCTNAME LIKE '%d%' OR PRODUCTNAME LIKE '%D%'


-- BARANJE 6
SELECT PRODUCTNAME
FROM PRODUCTS P
WHERE NOT EXISTS (SELECT PRODUCTID
                              FROM ORDERDETAILS O
                              WHERE O.PRODUCTID = P.PRODUCTID)


-- BARANJE 7
SELECT ORDERID, SUM(QUANTITY*PRODUCTPRICE)
FROM ORDERDETAILS O, PRODUCTS P
WHERE O.PRODUCTID = P.PRODUCTID
GROUP BY ORDERID


-- BARANJE 8
SELECT *
FROM ORDERDETAILS O, PRODUCTS P
WHERE O.PRODUCTID = P.PRODUCTID


-- BARANJE 9
SELECT P.PRODUCTID, COUNT(*)
FROM ORDERDETAILS O, PRODUCTS P
WHERE O.PRODUCTID = P.PRODUCTID
GROUP BY P.PRODUCTID
HAVING COUNT(*) > 2


-- BARANJE 10
SELECT CONSULTANTID, SUM(QUANTITY*PRODUCTPRICE)
FROM ORDERS O, ORDERDETAILS OD, PRODUCTS P
WHERE O.ORDERID = OD.ORDERID AND OD.PRODUCTID = P.PRODUCTID
GROUP BY CONSULTANTID

*/